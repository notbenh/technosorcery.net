!!! XML
!!!
%html
  %head
    %title
      - unless @item[:title].nil?
        #{@item[:title]} - #{@site.config[:title]}
      - else
        #{@site.config[:title]}: #{@site.config[:tagline]}
    %link{:rel => "alternate", :type => "application/rss+xml", :href => "http://feeds.feedburner.com/TechnosorceryNetworks", :title => "Article feed"}
    %link{:href => "/stylesheets/base.css", :rel => "stylesheet", :type => "text/css"}
    %link{:href => "/stylesheets/syntax_highlight.css", :rel => "stylesheet", :type => "text/css"}
    %link{:rel => "openid2.provider", :href => "http://openid.technosorcery.net/"}
    %link{:rel => "openid2.local_id", :href => "http://openid.technosorcery.net/jhelwig"}
    %link{:rel => "openid.server", :href => "http://openid.technosorcery.net/"}
    %link{:rel => "openid.delegate", :href => "http://openid.technosorcery.net/jhelwig"}
    %meta{:name => "generator", :content => "nanoc 3.2.3"}
    -# IF constants.debug
    :javascript
      var disqus_developer = 1;
    -# END
    %script{:src => "/javascripts/app.js", :type => "text/javascript"}
    /[if IE]
      %link{:href => "/stylesheets/base_ie.css", :rel => "stylesheet", :type => "text/css"}
  %body.fixed.blue
    #wrapper
      #header.clearfix
        #title.clearfix
          %h1
            %a{:href => "/", :title => "Home"}
              = @site.config[:title]

      #contentwrapper.clearfix
        #content
          #innerwrapper
            = yield

        #sidebar
          .boxy.short
            %h3 About
            %p I&rsquo;m just a Perl hacker, occasionally dabbling in some Ruby &amp; Rails.
            -# Emacs's haml-mode gets confused with the unbalanced single quote.
          .boxy.short
            %h3 My Stuff
            %p
              %a{:href => "/resume.pdf",  :title => "My R&eacute;sum&eacute;"} R&eacute;sum&eacute;
              %br
              %a{:href => "http://twitter.com/jhelwig", :title => "My Twitter account"} Twitter account
              %br
              %a{:href => "https://github.com/jhelwig", :title => "My GitHub account"} GitHub account
              %br
              %a{:href => "http://search.cpan.org/~jhelwig/", :title => "My CPAN modules"} CPAN modules
              %br
              %a{:href => "http://www.linkedin.com/in/jhelwig", :title => "My LinkedIn profile"} LinkedIn profile
              %br
              %a{:href => "http://hi.im/jacob", :title => "Hi, I'm..."} Hi, I'm
              -# Emacs's haml-mode gets confused with the unbalanced single quote.
          .boxy.tall.minor
            %h3 Recent
            %dl
              %dt
                Articles
                %a{:class => "feed", :href => "http://feeds.feedburner.com/TechnosorceryNetworks", :rel => "alternate", :type => "application/rss+xml"}
                %span feed
              %dd
                %ul
                  - sorted_articles[0..4].each do |recent|
                    %li
                      %a{:href => "#{relative_path_to(recent)}", :title => "#{recent[:title]}"}
                        = recent[:title]
                      %em (#{recent[:created_at].strftime('%B %e %Y')})
          .boxy.short
            %h3 Archives
            %ul.year
              - each_year do |year,year_articles|
                %li
                  %a{:href => "#{relative_path_to("/#{year}/")}", :title => "Posts from #{year}"}
                    Posts from #{year} (#{year_articles.length})
                  %ul.month
                    - each_month(year, year_articles) do |month, year, month_articles|
                      %li
                        %a{:href => "#{relative_path_to("/#{year}/#{month}/")}", :title => "Posts from #{MONTHS[month]} #{year}"}
                          #{MONTHS[month]} (#{month_articles.length})
          .boxy.tall
            %h3 Tags
            %ul
              - each_tag do |tag|
                %li
                  %a{:href => uri_escape(relative_path_to("/tag/#{tag}/")), :rel => "tag"}<
                    &= "#{tag} (#{items_with_tag(tag).length})"
      #footer
        %p
          Copyright &copy; 2009-#{Time.now.year}, Jacob Helwig.
          -# Valid
          -#  %a{:href => "http://validator.w3.org/check/referer"} XHTML
          -#  and
          -#  %a{:href => "http://jigsaw.w3.org/css-validator/check/referer"} CSS
        %p
          Using
          %a{:href => "https://github.com/ddfreyne/nanoc/"} nanoc
          and
          %a{:href => "http://evil.che.lu/projects/skittlish"} skittlish
    :javascript
      (function() {
          var links = document.getElementsByTagName('a');
          var query = '?';
          for(var i = 0; i < links.length; i++) {
              if(links[i].href.indexOf('#disqus_thread') >= 0) {
                  query += 'url' + i + '=' + encodeURIComponent(links[i].href) + '&';
              }
          }
          document.write('<script charset="utf-8" type="text/javascript" src="http://disqus.com/forums/technosorcerynetworks/get_num_replies.js' + query + '"></' + 'script>');
      })();
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-4353938-2']);
      _gaq.push(['_trackPageview']);

      (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
